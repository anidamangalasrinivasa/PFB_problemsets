#!/usr/bin/env python3
import re
import sys

class DNA_deets(object):
    def __init__(self, gene_name,sequence, organism):
        self.gene_name=gene_name
        self.sequence=sequence.upper()
        self.organism=organism
    
    def seq_length(self):
        sequence_len=len(self.sequence)
        return sequence_len
    
    def seq_comp(self):
        sequence=self.sequence
        count_A=sequence.count('A')
        count_T=sequence.count('T')
        count_G=sequence.count('G')
        count_C=sequence.count('C')
        dict_counts={'A':count_A, 'T':count_T, 'C':count_C, 'G':count_G}
        return dict_counts
    
    def gc_content(self):
        sequence=self.sequence
        gc_count=sequence.count('G')+sequence.count('C')
        length=len(self.sequence)
        gc_content=100*(gc_count/length)
        return gc_content
    
    def parse_fasta(self):
        sequence=self.sequence
        split_dna_2=re.sub(rf'(.{{1,{60}}})',r'\1\n', sequence)
        split_lines_2=split_dna_2.split('\n')
        print(f'>{self.gene_name}')
        for lines in split_lines_2:
            print(f'{lines}')
        
    def show(self):
        list1=[self.gene_name, self.sequence, self.organism]
        return list1
    
    def compare(self1,self2):
        list1=self1.show()
        list2=self2.show()
        if set(list1)==set(list2):
            print('DNA directories are identical')
        else:
            print('DNA directories are different')



wtf4=DNA_deets('wtf4','ATGCTTTCAGAAATTTGGAAATATATTAAAACTGTATCTGAGGATTCAAGTACAGGACCTACAGAAATTGCAAATCCCAATGTCGAAAGAAGACAAGAATTCAAAGATTCACATCCAAATATATATTCCCTTCTGAGACTACTAATATCAGTTCTTGCAGTTATTGTTGTCTTTTTTACTGCATGGGTTTGTGTAAACCCGTTGGAGAAGTCGATATTCGGCAAGGTAGCTTTCTCCGTCACAATTGGTATAACATGTCCAATAGTGTTTATTGTTATTTTCTGCTTCTTTGAAACTTGGACCCAGGCAGTGGCACAATGTATAAAGGTGACTGTAATTTTCTTGGCACAATGTGTAAAGGTGACTGCAGTTTTCTTGGCAAAATGTGTAAAGGTAATTGCGGTCGGTTTGTATAACTCAAAAAAAGATTTGGTGGTTACAATCTGGCTCGCATGGGTAGTCATTTGTTTTATACTCTTTGGTTGCGTCAAGGATGGTAGACTAAACTTAAATAAGGCACTCATCTGTTCCACATGCAGTATTTCGGCTGCTTTATTTTTCATTTTATTGCTTGTTTGTATTCCAATTTGGACACTCAAGCATATGCTTTTTGGTTTGTTTCAAGTGCTGGGTGTACAAAGTTGTGTCGTTATTGTAACGAAAGGTTTGATGTATTTATTTGATAAACATATCGACGCGACAGGCTACGAAATTGAAGCCTCTTCACTCTTTGTTATAGGAAATTTTCTTTTCTTTTACGAAATGGAACTCCAGGTGCTCTCAAAAGGATGCCCAAATTTATCGGGAATGGTATAGCTTCTTTCCTAGGAGGTTTAGGAAATGCATTTGGAGGGATAGGAAATGCATTTGGAGGGATAGGAAATGCAATTGGGCGGATAGGAAATGCGTTTAGAGGTGCCAACGATAATAATGACATTCCCTTGGGAGAAATGGATGTTGAAAGCGAAGTCTAA', 'Schizosaccharomyces pombe')

print(f'Gene name:{wtf4.gene_name}, Sequence:{wtf4.sequence[0:20]}..., Organism:\x1B[3m{wtf4.organism}\x1B[0m')
print(f'Sequence length:{str(wtf4.seq_length())}')
nt_count=wtf4.seq_comp()
for keys in nt_count:
    print(f'{keys}:{nt_count[keys]}')
print(f'Percentage GC content={wtf4.gc_content()}\n')
print(f'FASTA sequence')
wtf4.parse_fasta()

wtf4_1=DNA_deets('wtf4', 'ATGCTTTCAGAAATTTGGAAATATATTAAAACTGTATCTGAGGATTCAAGTACAGGACCTACAGAAATTGCAAATCCCAATGTCGAAAGAAGACAAGAATTCAAAGATTCACATCCAAATATATATTCCCTTCTGAGACTACTAATATCAGTTCTTGCAGTTATTGTTGTCTTTTTTACTGCATGGGTTTGTGTAAACCCGTTGGAGAAGTCGATATTCGGCAAGGTAGCTTTCTCCGTCACAATTGGTATAACATGTCCAATAGTGTTTATTGTTATTTTCTGCTTCTTTGAAACTTGGACCCAGGCAGTGGCACAATGTATAAAGGTGACTGTAATTTTCTTGGCACAATGTGTAAAGGTGACTGCAGTTTTCTTGGCAAAATGTGTAAAGGTAATTGCGGTCGGTTTGTATAACTCAAAAAAAGATTTGGTGGTTACAATCTGGCTCGCATGGGTAGTCATTTGTTTTATACTCTTTGGTTGCGTCAAGGATGGTAGACTAAACTTAAATAAGGCACTCATCTGTTCCACATGCAGTATTTCGGCTGCTTTATTTTTCATTTTATTGCTTGTTTGTATTCCAATTTGGACACTCAAGCATATGCTTTTTGGTTTGTTTCAAGTGCTGGGTGTACAAAGTTGTGTCGTTATTGTAACGAAAGGTTTGATGTATTTATTTGATAAACATATCGACGCGACAGGCTACGAAATTGAAGCCTCTTCACTCTTTGTTATAGGAAATTTTCTTTTCTTTTACGAAATGGAACTCCAGGTGCTCTCAAAAGGATGCCCAAATTTATCGGGAATGGTATAGCTTCTTTCCTAGGAGGTTTAGGAAATGCATTTGGAGGGATAGGAAATGCATTTGGAGGGATAGGAAATGCAATTGGGCGGATAGGAAATGCGTTTAGAGGTGCCAACGATAATAATGACATTCCCTTGGGAGAAATGGATGTTGAAAGCGAAGTCTAA','Schizosaccharomyces kambucha' )

wtf4.compare(wtf4_1)